name: MLOps CI/CD Pipeline

on:
  push:
    branches: [ docker_ci ]
  pull_request:
    branches: [ docker_ci ]

jobs:
  build_and_test_container:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create models directory
      run: mkdir -p models
    
    - name: Run training script to generate model
      run: |
        python src/train.py
        echo "Checking if model files were created..."
        ls -la models/
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -t mlops-pipeline:latest .
        echo "Docker image built successfully"
    
    - name: Run Docker container for verification
      run: |
        echo "Running model verification in Docker container..."
        docker run --rm mlops-pipeline:latest python src/predict.py
        echo "Container verification completed successfully"
    
    - name: Login to Docker Hub
      if: success()
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Push to Docker Hub
      if: success()
      run: |
        # Tag the image with Docker Hub repository name
        docker tag mlops-pipeline:latest ${{ secrets.DOCKER_USERNAME }}/mlops-pipeline:latest
        docker tag mlops-pipeline:latest ${{ secrets.DOCKER_USERNAME }}/mlops-pipeline:${{ github.sha }}
        
        # Push both tags
        docker push ${{ secrets.DOCKER_USERNAME }}/mlops-pipeline:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/mlops-pipeline:${{ github.sha }}
        
        echo "Successfully pushed to Docker Hub"